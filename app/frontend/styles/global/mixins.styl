scroll()
  max-height 100%
  overflow hidden
  overflow-y auto
  -webkit-overflow-scrolling touch

link-style()
  text-decoration none
  color currentColor
  transition color .2s ease

  &:hover
  &.active
    color $blue

reset-autofill($color = $white)
  &:-webkit-autofill
  &:-webkit-autofill:hover
  &:-webkit-autofill:focus
    transition background-color 5000s ease-in-out 0s
    -webkit-text-fill-color $color
    border-color $color

underline-link-style($hoverColor = $white)
  position relative
  display inline-block
  vertical-align top
  padding-bottom 8px
  text-decoration none
  color currentColor
  transition color .2s ease
  overflow hidden
  line-height 1.2
  transform translateZ(0)

  &:hover:not([disabled])
  &:focus:not([disabled])
  &.active
    color $hoverColor

    &:after
      transform translateX(100%) translateZ(0)

  &:after
    content ''
    width 100%
    height 2px
    right 100%
    bottom 0
    background $blue
    position absolute
    transform translateX(0%) translateZ(0)
    transition transform .2s ease

container-inner()
  width 100%
  max-width 740px
  margin-left auto
  margin-right auto

container()
  padding-left $baseOffset
  padding-right $baseOffset
  margin-left auto
  margin-right auto

  +tablet()
    padding-left $baseOffsetMobile
    padding-right $baseOffsetMobile

fonts($fontFamily, $src, $weight = normal, $style = normal)
  @font-face
    font-family $fontFamily
    src url(../'assets/fonts'/$src.woff2) format('woff2'),
    url(../'assets/fonts'/$src.woff) format('woff')
    font-weight $weight
    font-style $style

add-area($width = 20, $height = 50)
  position relative
  &:after
    position absolute
    display block
    content ''
    left - $width * 1%
    right - $width * 1%
    top - $height * 1%
    bottom - $height * 1%

abs()
  position absolute
  left 0
  right 0
  top 0
  bottom 0

placeholder-color($color)
  &::-webkit-input-placeholder
    color $color !important
    {block}
  &:-moz-placeholder
    color $color !important
    {block}
  &::-moz-placeholder
    color: $color !important
    {block}
  &:-ms-input-placeholder
    color $color !important
    {block}
  &.placeholder
    color $color !important
    {block}

// PX to EM function
// use font-size em(22px, 16px)
em($value, $base = $baseFontSize)
  $max = length($value)

  $emValues = ()
  for $i in (0...$max)
    push($emValues, _convert-to-em($value[$i], $base))

  return $emValues

_convert-to-em($px, $base)
  if ((unit($px) == '' || unit($px) == 'px') && ($px != 0))
    return (round($px / $base, 3)) em
  else
    return 0

rem($value, $base = $baseFontSize)
  $max = length($value)

  $remValues = ()
  for $i in (0...$max)
    push($remValues, _convert-to-rem($value[$i], $base))

  return $remValues

_convert-to-rem($px, $base)
  if ((unit($px) == '' || unit($px) == 'px') && ($px != 0))
    return (round($px / $base, 3)) rem
  else
    return 0

triangle(width = 10px, height = 10px, direction = 'bottom', color = #000)
  // Base triangle styles
  width 0
  height 0
  background 0
  border-style solid

  // Styles for each direction
  directions = {
    top: {
      border-width: 0 (width * .5) height (width * .5),
      border-color: transparent transparent color transparent
    },
    topRight: {
      border-width: 0 width height 0,
      border-color: transparent color transparent transparent
    },
    right: {
      border-width: (height * .5) 0 (height *.5) width,
      border-color: transparent transparent transparent color
    },
    bottomRight: {
      border-width: 0 0 height width,
      border-color: transparent transparent color transparent
    },
    bottom: {
      border-width: height (width * .5) 0 (width * .5),
      border-color: color transparent transparent transparent
    },
    bottomLeft: {
      border-width: width 0 0 height,
      border-color: transparent transparent transparent color
    },
    left: {
      border-width: (height * .5) width (height * .5) 0,
      border-color: transparent color transparent transparent
    },
    topLeft: {
      border-width: height width 0 0,
      border-color: color transparent transparent transparent
    }
  }

  // Mixin styles for passed direction
  styles = directions[direction]
  {styles}

// Clear the float on any element.
clearfix()
	&:after
		display table
		clear both
		content ''

// Fix no working `-webkit-text-size-adjust: 100%;` in Android.
fix-text-size-adjust()
	background-image linear-gradient(transparent, transparent)

// Set element size
size($width, $height = $width)
	width $width
	height $height

// Set margin on left & right
margin-x($margin)
	margin-left $margin
	margin-right $margin

// Set margin on top & bottom
margin-y($margin)
	margin-top $margin
	margin-bottom $margin

// Set pading on left & right
padding-x($padding)
	padding-left $padding
	padding-right $padding

// Set padding on top & bottom
padding-y($padding)
	padding-top $padding
	padding-bottom $padding

// Set one static retina image
retinaBackground($image, $ext = 'png') {
	background-image url('../images/' + $image + '.' + $ext)

	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
		background-image url('../images/' + $image + '@2x.' + $ext)
	}
}
